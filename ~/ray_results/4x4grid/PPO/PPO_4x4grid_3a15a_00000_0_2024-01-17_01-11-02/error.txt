Failure # 1 (occurred at 2024-01-17_01-11-13)
[36mray::PPO.train()[39m (pid=71574, ip=140.118.201.156, actor_id=05868b55592722dff6a6ba4401000000, repr=PPO)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/tune/trainable/trainable.py", line 342, in train
    raise skipped from exception_cause(skipped)
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/tune/trainable/trainable.py", line 339, in train
    result = self.step()
             ^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/algorithms/algorithm.py", line 852, in step
    results, train_iter_ctx = self._run_one_training_iteration()
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/algorithms/algorithm.py", line 3042, in _run_one_training_iteration
    results = self.training_step()
              ^^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/algorithms/ppo/ppo.py", line 407, in training_step
    train_batch = synchronous_parallel_sample(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/execution/rollout_ops.py", line 83, in synchronous_parallel_sample
    sample_batches = worker_set.foreach_worker(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/evaluation/worker_set.py", line 705, in foreach_worker
    handle_remote_call_result_errors(remote_results, self._ignore_worker_failures)
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/evaluation/worker_set.py", line 78, in handle_remote_call_result_errors
    raise r.get()
ray.exceptions.RayTaskError(ValueError): [36mray::RolloutWorker.apply()[39m (pid=71671, ip=140.118.201.156, actor_id=626eda91039eefe8e8c8f0c301000000, repr=<ray.rllib.evaluation.rollout_worker.RolloutWorker object at 0x7faba610ced0>)
ValueError: The two structures don't have the same nested structure.

First structure: type=ndarray str=[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]

Second structure: type=OrderedDict str=OrderedDict([('0', array([0.42990988, 0.6708746 , 0.5777369 , 0.567674  , 0.41763043,
       0.82820886, 0.24680598, 0.8746287 , 0.66302115, 0.9191012 ,
       0.36777884], dtype=float32)), ('1', array([0.43571904, 0.03507201, 0.06914524, 0.7823303 , 0.4357847 ,
       0.11558566, 0.8184441 , 0.95913   , 0.24836822, 0.15945096,
       0.19555108], dtype=float32)), ('10', array([0.2541968 , 0.96111995, 0.06089121, 0.81510967, 0.94213897,
       0.04069335, 0.66898865, 0.9312671 , 0.6340181 , 0.67808   ,
       0.37184656], dtype=float32)), ('11', array([0.2595958 , 0.10454965, 0.0451206 , 0.5748419 , 0.32071057,
       0.8785083 , 0.7489123 , 0.7857764 , 0.28286317, 0.2309028 ,
       0.79401445], dtype=float32)), ('12', array([0.42283693, 0.15656905, 0.38786027, 0.09686848, 0.16364764,
       0.17276993, 0.47622058, 0.22986177, 0.59268767, 0.0010021 ,
       0.25592792], dtype=float32)), ('13', array([0.6490284 , 0.28251097, 0.19608422, 0.85338604, 0.4042841 ,
       0.7298224 , 0.9231574 , 0.17070319, 0.07442496, 0.43910584,
       0.7114138 ], dtype=float32)), ('14', array([0.9804549 , 0.26623252, 0.6756323 , 0.17348993, 0.31567085,
       0.5364517 , 0.4403342 , 0.3467131 , 0.12034073, 0.91548806,
       0.7617669 ], dtype=float32)), ('15', array([0.6501138 , 0.11466624, 0.10076955, 0.7976792 , 0.0506302 ,
       0.81734186, 0.07182394, 0.6906674 , 0.4491396 , 0.58053213,
       0.02141827], dtype=float32)), ('2', array([0.8686018 , 0.0762269 , 0.00565407, 0.3299734 , 0.40308964,
       0.2948854 , 0.48737016, 0.08940244, 0.15023619, 0.47130117,
       0.11803914], dtype=float32)), ('3', array([0.73940486, 0.6058703 , 0.56536895, 0.7275564 , 0.9463141 ,
       0.44758868, 0.65146357, 0.65949136, 0.24614152, 0.13949831,
       0.68048847], dtype=float32)), ('4', array([0.0945567 , 0.19769426, 0.71254516, 0.6917867 , 0.8752303 ,
       0.23436931, 0.1445592 , 0.01975659, 0.19215731, 0.10708161,
       0.32531494], dtype=float32)), ('5', array([5.7562703e-01, 2.6438565e-05, 9.7995305e-01, 4.8296666e-01,
       3.6440548e-01, 1.3043770e-01, 1.5756802e-01, 3.7484175e-01,
       6.0660899e-01, 3.0054459e-01, 2.8749835e-01], dtype=float32)), ('6', array([0.45892432, 0.5415929 , 0.68620765, 0.45366794, 0.6069615 ,
       0.38059828, 0.80442363, 0.3831292 , 0.24219435, 0.18457033,
       0.1413364 ], dtype=float32)), ('7', array([0.45650566, 0.50651526, 0.64416635, 0.13775828, 0.4483654 ,
       0.9725742 , 0.50372857, 0.5181946 , 0.32294095, 0.9216996 ,
       0.48137966], dtype=float32)), ('8', array([0.87390745, 0.8906945 , 0.09573516, 0.22055317, 0.23778336,
       0.00737419, 0.12679747, 0.15354288, 0.49622348, 0.34774804,
       0.9595508 ], dtype=float32)), ('9', array([0.31820497, 0.80220777, 0.01507297, 0.89031875, 0.19231082,
       0.10372502, 0.03815967, 0.93938684, 0.6430995 , 0.3597452 ,
       0.9486176 ], dtype=float32))])

More specifically: Substructure "type=OrderedDict str=OrderedDict([('0', array([0.42990988, 0.6708746 , 0.5777369 , 0.567674  , 0.41763043,
       0.82820886, 0.24680598, 0.8746287 , 0.66302115, 0.9191012 ,
       0.36777884], dtype=float32)), ('1', array([0.43571904, 0.03507201, 0.06914524, 0.7823303 , 0.4357847 ,
       0.11558566, 0.8184441 , 0.95913   , 0.24836822, 0.15945096,
       0.19555108], dtype=float32)), ('10', array([0.2541968 , 0.96111995, 0.06089121, 0.81510967, 0.94213897,
       0.04069335, 0.66898865, 0.9312671 , 0.6340181 , 0.67808   ,
       0.37184656], dtype=float32)), ('11', array([0.2595958 , 0.10454965, 0.0451206 , 0.5748419 , 0.32071057,
       0.8785083 , 0.7489123 , 0.7857764 , 0.28286317, 0.2309028 ,
       0.79401445], dtype=float32)), ('12', array([0.42283693, 0.15656905, 0.38786027, 0.09686848, 0.16364764,
       0.17276993, 0.47622058, 0.22986177, 0.59268767, 0.0010021 ,
       0.25592792], dtype=float32)), ('13', array([0.6490284 , 0.28251097, 0.19608422, 0.85338604, 0.4042841 ,
       0.7298224 , 0.9231574 , 0.17070319, 0.07442496, 0.43910584,
       0.7114138 ], dtype=float32)), ('14', array([0.9804549 , 0.26623252, 0.6756323 , 0.17348993, 0.31567085,
       0.5364517 , 0.4403342 , 0.3467131 , 0.12034073, 0.91548806,
       0.7617669 ], dtype=float32)), ('15', array([0.6501138 , 0.11466624, 0.10076955, 0.7976792 , 0.0506302 ,
       0.81734186, 0.07182394, 0.6906674 , 0.4491396 , 0.58053213,
       0.02141827], dtype=float32)), ('2', array([0.8686018 , 0.0762269 , 0.00565407, 0.3299734 , 0.40308964,
       0.2948854 , 0.48737016, 0.08940244, 0.15023619, 0.47130117,
       0.11803914], dtype=float32)), ('3', array([0.73940486, 0.6058703 , 0.56536895, 0.7275564 , 0.9463141 ,
       0.44758868, 0.65146357, 0.65949136, 0.24614152, 0.13949831,
       0.68048847], dtype=float32)), ('4', array([0.0945567 , 0.19769426, 0.71254516, 0.6917867 , 0.8752303 ,
       0.23436931, 0.1445592 , 0.01975659, 0.19215731, 0.10708161,
       0.32531494], dtype=float32)), ('5', array([5.7562703e-01, 2.6438565e-05, 9.7995305e-01, 4.8296666e-01,
       3.6440548e-01, 1.3043770e-01, 1.5756802e-01, 3.7484175e-01,
       6.0660899e-01, 3.0054459e-01, 2.8749835e-01], dtype=float32)), ('6', array([0.45892432, 0.5415929 , 0.68620765, 0.45366794, 0.6069615 ,
       0.38059828, 0.80442363, 0.3831292 , 0.24219435, 0.18457033,
       0.1413364 ], dtype=float32)), ('7', array([0.45650566, 0.50651526, 0.64416635, 0.13775828, 0.4483654 ,
       0.9725742 , 0.50372857, 0.5181946 , 0.32294095, 0.9216996 ,
       0.48137966], dtype=float32)), ('8', array([0.87390745, 0.8906945 , 0.09573516, 0.22055317, 0.23778336,
       0.00737419, 0.12679747, 0.15354288, 0.49622348, 0.34774804,
       0.9595508 ], dtype=float32)), ('9', array([0.31820497, 0.80220777, 0.01507297, 0.89031875, 0.19231082,
       0.10372502, 0.03815967, 0.93938684, 0.6430995 , 0.3597452 ,
       0.9486176 ], dtype=float32))])" is a sequence, while substructure "type=ndarray str=[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]" is not

During handling of the above exception, another exception occurred:

[36mray::RolloutWorker.apply()[39m (pid=71671, ip=140.118.201.156, actor_id=626eda91039eefe8e8c8f0c301000000, repr=<ray.rllib.evaluation.rollout_worker.RolloutWorker object at 0x7faba610ced0>)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/utils/actor_manager.py", line 189, in apply
    raise e
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/utils/actor_manager.py", line 178, in apply
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/execution/rollout_ops.py", line 84, in <lambda>
    lambda w: w.sample(), local_worker=False, healthy_only=True
              ^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/evaluation/rollout_worker.py", line 694, in sample
    batches = [self.input_reader.next()]
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/evaluation/sampler.py", line 91, in next
    batches = [self.get_data()]
               ^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/evaluation/sampler.py", line 276, in get_data
    item = next(self._env_runner)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/evaluation/env_runner_v2.py", line 344, in run
    outputs = self.step()
              ^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/evaluation/env_runner_v2.py", line 370, in step
    active_envs, to_eval, outputs = self._process_observations(
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/evaluation/env_runner_v2.py", line 637, in _process_observations
    processed = policy.agent_connectors(acd_list)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/connectors/agent/pipeline.py", line 41, in __call__
    ret = c(ret)
          ^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/connectors/connector.py", line 265, in __call__
    return [self.transform(d) for d in acd_list]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/connectors/connector.py", line 265, in <listcomp>
    return [self.transform(d) for d in acd_list]
            ^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/connectors/agent/obs_preproc.py", line 58, in transform
    d[SampleBatch.NEXT_OBS] = self._preprocessor.transform(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/models/preprocessors.py", line 329, in transform
    self.check_shape(observation)
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/models/preprocessors.py", line 69, in check_shape
    observation = convert_element_to_space_type(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/ray/rllib/utils/spaces/space_utils.py", line 472, in convert_element_to_space_type
    return tree.map_structure(map_, element, sampled_element, check_types=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/tree/__init__.py", line 433, in map_structure
    assert_same_structure(structures[0], other, check_types=check_types)
  File "/home/citiai-cygnus/anaconda3/lib/python3.11/site-packages/tree/__init__.py", line 288, in assert_same_structure
    raise type(e)("%s\n"
ValueError: The two structures don't have the same nested structure.

First structure: type=ndarray str=[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]

Second structure: type=OrderedDict str=OrderedDict([('0', array([0.42990988, 0.6708746 , 0.5777369 , 0.567674  , 0.41763043,
       0.82820886, 0.24680598, 0.8746287 , 0.66302115, 0.9191012 ,
       0.36777884], dtype=float32)), ('1', array([0.43571904, 0.03507201, 0.06914524, 0.7823303 , 0.4357847 ,
       0.11558566, 0.8184441 , 0.95913   , 0.24836822, 0.15945096,
       0.19555108], dtype=float32)), ('10', array([0.2541968 , 0.96111995, 0.06089121, 0.81510967, 0.94213897,
       0.04069335, 0.66898865, 0.9312671 , 0.6340181 , 0.67808   ,
       0.37184656], dtype=float32)), ('11', array([0.2595958 , 0.10454965, 0.0451206 , 0.5748419 , 0.32071057,
       0.8785083 , 0.7489123 , 0.7857764 , 0.28286317, 0.2309028 ,
       0.79401445], dtype=float32)), ('12', array([0.42283693, 0.15656905, 0.38786027, 0.09686848, 0.16364764,
       0.17276993, 0.47622058, 0.22986177, 0.59268767, 0.0010021 ,
       0.25592792], dtype=float32)), ('13', array([0.6490284 , 0.28251097, 0.19608422, 0.85338604, 0.4042841 ,
       0.7298224 , 0.9231574 , 0.17070319, 0.07442496, 0.43910584,
       0.7114138 ], dtype=float32)), ('14', array([0.9804549 , 0.26623252, 0.6756323 , 0.17348993, 0.31567085,
       0.5364517 , 0.4403342 , 0.3467131 , 0.12034073, 0.91548806,
       0.7617669 ], dtype=float32)), ('15', array([0.6501138 , 0.11466624, 0.10076955, 0.7976792 , 0.0506302 ,
       0.81734186, 0.07182394, 0.6906674 , 0.4491396 , 0.58053213,
       0.02141827], dtype=float32)), ('2', array([0.8686018 , 0.0762269 , 0.00565407, 0.3299734 , 0.40308964,
       0.2948854 , 0.48737016, 0.08940244, 0.15023619, 0.47130117,
       0.11803914], dtype=float32)), ('3', array([0.73940486, 0.6058703 , 0.56536895, 0.7275564 , 0.9463141 ,
       0.44758868, 0.65146357, 0.65949136, 0.24614152, 0.13949831,
       0.68048847], dtype=float32)), ('4', array([0.0945567 , 0.19769426, 0.71254516, 0.6917867 , 0.8752303 ,
       0.23436931, 0.1445592 , 0.01975659, 0.19215731, 0.10708161,
       0.32531494], dtype=float32)), ('5', array([5.7562703e-01, 2.6438565e-05, 9.7995305e-01, 4.8296666e-01,
       3.6440548e-01, 1.3043770e-01, 1.5756802e-01, 3.7484175e-01,
       6.0660899e-01, 3.0054459e-01, 2.8749835e-01], dtype=float32)), ('6', array([0.45892432, 0.5415929 , 0.68620765, 0.45366794, 0.6069615 ,
       0.38059828, 0.80442363, 0.3831292 , 0.24219435, 0.18457033,
       0.1413364 ], dtype=float32)), ('7', array([0.45650566, 0.50651526, 0.64416635, 0.13775828, 0.4483654 ,
       0.9725742 , 0.50372857, 0.5181946 , 0.32294095, 0.9216996 ,
       0.48137966], dtype=float32)), ('8', array([0.87390745, 0.8906945 , 0.09573516, 0.22055317, 0.23778336,
       0.00737419, 0.12679747, 0.15354288, 0.49622348, 0.34774804,
       0.9595508 ], dtype=float32)), ('9', array([0.31820497, 0.80220777, 0.01507297, 0.89031875, 0.19231082,
       0.10372502, 0.03815967, 0.93938684, 0.6430995 , 0.3597452 ,
       0.9486176 ], dtype=float32))])

More specifically: Substructure "type=OrderedDict str=OrderedDict([('0', array([0.42990988, 0.6708746 , 0.5777369 , 0.567674  , 0.41763043,
       0.82820886, 0.24680598, 0.8746287 , 0.66302115, 0.9191012 ,
       0.36777884], dtype=float32)), ('1', array([0.43571904, 0.03507201, 0.06914524, 0.7823303 , 0.4357847 ,
       0.11558566, 0.8184441 , 0.95913   , 0.24836822, 0.15945096,
       0.19555108], dtype=float32)), ('10', array([0.2541968 , 0.96111995, 0.06089121, 0.81510967, 0.94213897,
       0.04069335, 0.66898865, 0.9312671 , 0.6340181 , 0.67808   ,
       0.37184656], dtype=float32)), ('11', array([0.2595958 , 0.10454965, 0.0451206 , 0.5748419 , 0.32071057,
       0.8785083 , 0.7489123 , 0.7857764 , 0.28286317, 0.2309028 ,
       0.79401445], dtype=float32)), ('12', array([0.42283693, 0.15656905, 0.38786027, 0.09686848, 0.16364764,
       0.17276993, 0.47622058, 0.22986177, 0.59268767, 0.0010021 ,
       0.25592792], dtype=float32)), ('13', array([0.6490284 , 0.28251097, 0.19608422, 0.85338604, 0.4042841 ,
       0.7298224 , 0.9231574 , 0.17070319, 0.07442496, 0.43910584,
       0.7114138 ], dtype=float32)), ('14', array([0.9804549 , 0.26623252, 0.6756323 , 0.17348993, 0.31567085,
       0.5364517 , 0.4403342 , 0.3467131 , 0.12034073, 0.91548806,
       0.7617669 ], dtype=float32)), ('15', array([0.6501138 , 0.11466624, 0.10076955, 0.7976792 , 0.0506302 ,
       0.81734186, 0.07182394, 0.6906674 , 0.4491396 , 0.58053213,
       0.02141827], dtype=float32)), ('2', array([0.8686018 , 0.0762269 , 0.00565407, 0.3299734 , 0.40308964,
       0.2948854 , 0.48737016, 0.08940244, 0.15023619, 0.47130117,
       0.11803914], dtype=float32)), ('3', array([0.73940486, 0.6058703 , 0.56536895, 0.7275564 , 0.9463141 ,
       0.44758868, 0.65146357, 0.65949136, 0.24614152, 0.13949831,
       0.68048847], dtype=float32)), ('4', array([0.0945567 , 0.19769426, 0.71254516, 0.6917867 , 0.8752303 ,
       0.23436931, 0.1445592 , 0.01975659, 0.19215731, 0.10708161,
       0.32531494], dtype=float32)), ('5', array([5.7562703e-01, 2.6438565e-05, 9.7995305e-01, 4.8296666e-01,
       3.6440548e-01, 1.3043770e-01, 1.5756802e-01, 3.7484175e-01,
       6.0660899e-01, 3.0054459e-01, 2.8749835e-01], dtype=float32)), ('6', array([0.45892432, 0.5415929 , 0.68620765, 0.45366794, 0.6069615 ,
       0.38059828, 0.80442363, 0.3831292 , 0.24219435, 0.18457033,
       0.1413364 ], dtype=float32)), ('7', array([0.45650566, 0.50651526, 0.64416635, 0.13775828, 0.4483654 ,
       0.9725742 , 0.50372857, 0.5181946 , 0.32294095, 0.9216996 ,
       0.48137966], dtype=float32)), ('8', array([0.87390745, 0.8906945 , 0.09573516, 0.22055317, 0.23778336,
       0.00737419, 0.12679747, 0.15354288, 0.49622348, 0.34774804,
       0.9595508 ], dtype=float32)), ('9', array([0.31820497, 0.80220777, 0.01507297, 0.89031875, 0.19231082,
       0.10372502, 0.03815967, 0.93938684, 0.6430995 , 0.3597452 ,
       0.9486176 ], dtype=float32))])" is a sequence, while substructure "type=ndarray str=[1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]" is not
Entire first structure:
.
Entire second structure:
OrderedDict([('0', .), ('1', .), ('10', .), ('11', .), ('12', .), ('13', .), ('14', .), ('15', .), ('2', .), ('3', .), ('4', .), ('5', .), ('6', .), ('7', .), ('8', .), ('9', .)])
